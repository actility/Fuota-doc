(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{381:function(e,a,t){e.exports=t.p+"assets/img/image003.c975689c.jpg"},476:function(e,a,t){"use strict";t.r(a);var i=t(45),r=Object(i.a)({},(function(){var e=this,a=e.$createElement,i=e._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"thingpark-fuota-functionalities"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#thingpark-fuota-functionalities"}},[e._v("#")]),e._v(" ThingPark FUOTA functionalities")]),e._v(" "),i("h2",{attrs:{id:"high-level-feature-description"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#high-level-feature-description"}},[e._v("#")]),e._v(" High-level feature description")]),e._v(" "),i("p",[e._v("Actility ThingPark FUOTA is a standalone server that interacts with the\nThingPark LRC LoRaWANÂ® network server to control end devices, set of end\ndevices, Multicast Groups, Regions and Campaigns.")]),e._v(" "),i("p",[e._v("It supports the following device management functions:")]),e._v(" "),i("ul",[i("li",[e._v("Large file transfer to groups of devices")]),e._v(" "),i("li",[e._v("Secure firmware update over the air to groups of devices")]),e._v(" "),i("li",[e._v("Unitary or group device configuration management")]),e._v(" "),i("li",[e._v("Management of multicast groups on the LRC network server and update\nof devices' FUOTA configuration to add or remove them from the\ngroups")]),e._v(" "),i("li",[e._v("Management of multicast class B or class C sessions and update of\ndevices' OTA configuration to start and stop the sessions")]),e._v(" "),i("li",[e._v("Management of data fragmentation sessions and update of devices' OTA\nconfiguration to receive large files as fragmented data")]),e._v(" "),i("li",[e._v('Fragmentation protocol without Error Correction ("carousel") to\nsupport low RAM devices')]),e._v(" "),i("li",[e._v("Application-level device time synchronization")]),e._v(" "),i("li",[e._v("Organization of update campaigns to optimize battery and radio\nconsumption")]),e._v(" "),i("li",[e._v("Generation of compressed delta firmware patches")]),e._v(" "),i("li",[e._v("Monitoring of upgrade campaigns, including current campaign stage,\nnumber of devices successfully upgraded and number of aborts or\nfailures at each stage")]),e._v(" "),i("li",[e._v("Scheduling of firmware update campaigns to minimize impact on\nnetwork and business operation")]),e._v(" "),i("li",[e._v("Export of accounting records")]),e._v(" "),i("li",[e._v("Mass export/import of various objects (devices, device lists,\nmulticast groups, etc.)")])]),e._v(" "),i("p",[e._v('The ThingPark FUOTA architecture also offers and optional optimized\ndifferential firmware update compression ("Smart Delta") feature. This\nfeature is supported by compression software that may be used directly\non the device firmware repository or on the developer computer, as well\nas a device side library.')]),e._v(" "),i("p",[e._v('The FUOTA functionality requires a server, a number of managed devices\nimplementing a FUOTA client application, and a LoRaWAN network\nsupporting class A, as well as class B and/or class C communication.\nWhen differential firmware update compression is used, the compression\nalgorithm which generates the "Smart Delta" patch can run on a separate\ncomputer. The high-level architecture is illustrated in the figure below.')]),e._v(" "),i("p",[i("img",{attrs:{src:t(381),alt:""}})]),e._v(" "),i("p",[e._v("The ThingPark FUOTA server performs upgrade campaign and session\nmanagement for devices, setting up necessary sessions on the device side\nand providing in-band and out-of-band information to the ThingPark\nWireless Network Server for Multicast setup.")]),e._v(" "),i("h2",{attrs:{id:"compressed-delta-update-feature-smart-delta"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#compressed-delta-update-feature-smart-delta"}},[e._v("#")]),e._v(' Compressed delta update feature ("Smart Delta")')]),e._v(" "),i("p",[e._v('The LoRa Alliance FUOTA protocol only specifies the transmission of\nlarge files over a multicast session. Simple FUOTA clients usually only\nsupport transmission of full firmware upgrades, which are often large\nand therefore require unrealistic downlink traffic. One of the key\nadvantages of the ThingPark FUOTA Server is support of compressed\ndifferential firmware upgrades ("Smart Delta"), as well as an optimized\ndevice-side client library (currently available only for ST\nMicroelectronics MCU based devices).')]),e._v(" "),i("p",[e._v("During a differential upgrade session, only the modified parts of the\nbinary are transmitted. The compression mechanism does not require any\nspecial preparation and planning of firmware image, unlike partial\nupdates which can change only contiguous regions of device firmware. The\nprovided device side library takes care of updating pointers as required\nin the unmodified parts of the binary.")]),e._v(" "),i("p",[e._v("Typical compression ratio for two consecutive firmware versions is\naround 8 (e.g. new firmware with 100 KB size will be compressed to a 12\nKB Smart Delta patch).")]),e._v(" "),i("p",[e._v("The Smart Delta upgrade feature requires prior knowledge of the firmware\nversion currently loaded to the device. If this information is not\navailable, the FUOTA Server will request the currently running firmware\nversion from the device.")]),e._v(" "),i("p",[e._v("Smart Delta patch generation requires unencrypted firmware images. The\nprovided compression Linux executable (Contact Actility to get the\nbinary file adapted to your OS) can be run offline by the device\nfirmware development team to generate an optimized Smart Delta patch.\nSmart Delta patch itself is signed to guarantee necessary firmware\nupgrade security.")]),e._v(" "),i("p",[e._v("Smart Delta feature is compatible with ST Microelectronics SBSFU package\nand supplied as a plug-in library.")])])}),[],!1,null,null,null);a.default=r.exports}}]);