(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{390:function(e,t,a){e.exports=a.p+"assets/img/image005.999d05ed.jpg"},391:function(e,t,a){e.exports=a.p+"assets/img/image006.622cf2c4.jpg"},392:function(e,t,a){e.exports=a.p+"assets/img/image007.b48caa34.jpg"},393:function(e,t,a){e.exports=a.p+"assets/img/img8.00f5da4d.png"},482:function(e,t,a){"use strict";a.r(t);var s=a(45),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"update-campaigns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-campaigns"}},[e._v("#")]),e._v(" Update campaigns")]),e._v(" "),s("p",[e._v("FUOTA server operations are organized by update campaigns. Campaigns are\noperating over a set of Device Sets and Regions.")]),e._v(" "),s("p",[e._v("Three types of operations are supported.")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("Operation")]),e._v(" "),s("th",[e._v("Description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[e._v("Configure Multicast Groups")])]),e._v(" "),s("td",[e._v("Multicast groups are created dynamically, a temporary Multicast session is open and commands are sent over the air to devices. No file transfer is involved for this type of campaign")])]),e._v(" "),s("tr",[s("td",[s("strong",[e._v("Upload Binary File")])]),e._v(" "),s("td",[e._v("A generic binary file is transferred to devices over the air over a Multicast Group and within a temporary Multicast session and Fragmentation session. Device behavior once the file is received is vendor-specific")])]),e._v(" "),s("tr",[s("td",[s("strong",[e._v("Firmware Upgrade Over the Air")])]),e._v(" "),s("td",[e._v("A firmware file is transferred to devices over the air over a Multicast Group and within a temporary Multicast session and Fragmentation session. The campaign completes once devices have reported their updated firmware version")])])])]),e._v(" "),s("h3",{attrs:{id:"campaign-overviews"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#campaign-overviews"}},[e._v("#")]),e._v(" Campaign overviews")]),e._v(" "),s("p",[e._v("Each type of FUOTA campaign is a state machine managed by the ThingPark\nFUOTA server. This topic presents a high-level view of state machines,\nand topics "),s("RouterLink",{attrs:{to:"/FUOTA-functionalities/FUOTA-update-campaigns/#generic-message-flow-during-campaign-setup"}},[e._v("Generic Message Flow During Campaign Setup")]),e._v(" through "),s("RouterLink",{attrs:{to:"/FUOTA-functionalities/FUOTA-update-campaigns/firmware-update-campaign/"}},[e._v("Firmware update campaigns")]),e._v(" present the details of each stage and\ntransition.")],1),e._v(" "),s("h4",{attrs:{id:"configure-multicast-group-campaign-overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-multicast-group-campaign-overview"}},[e._v("#")]),e._v(" Configure Multicast Group campaign overview")]),e._v(" "),s("p",[s("img",{attrs:{src:a(390),alt:""}})]),e._v(" "),s("h4",{attrs:{id:"upload-binary-file-campaign-overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upload-binary-file-campaign-overview"}},[e._v("#")]),e._v(" Upload binary file campaign overview")]),e._v(" "),s("p",[s("img",{attrs:{src:a(391),alt:""}})]),e._v(" "),s("h4",{attrs:{id:"firmware-upgrade-over-the-air-overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#firmware-upgrade-over-the-air-overview"}},[e._v("#")]),e._v(" Firmware upgrade over the air overview")]),e._v(" "),s("p",[s("img",{attrs:{src:a(392),alt:""}})]),e._v(" "),s("h3",{attrs:{id:"generic-message-flow-during-campaign-setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generic-message-flow-during-campaign-setup"}},[e._v("#")]),e._v(" Generic message flow during campaign setup")]),e._v(" "),s("p",[e._v("In order to initiate a campaign, FUOTA server initially communicates\nwith the device by sending unicast downlinks and processing uplinks from\nThingPark LRC network server via LRC-AS tunnel interface. The actual\nsoftware module that carries on this procedure is the RMC Agent. For\nmore information about RMC Agent, see "),s("RouterLink",{attrs:{to:"/FUOTA-server-architecture/RMC-agent/"}},[e._v("RMC Agent")]),e._v(".")],1),e._v(" "),s("p",[e._v("The generic message flow between the RMC Agent and the LRC via the\nLRC-AS tunnel interface for unicast frames is shown on the figure in the first step 3. The\ngeneric message flow for multicast frames is shown in the figure later in the second step 3. Actual\nprotocol command/response data payload which is sent between the RMC\nAgent and the End Device is encapsulated in these messages.")]),e._v(" "),s("p",[s("strong",[e._v("Note")]),e._v(" that all campaigns described in the following sections are\nusing this generic message flow.")]),e._v(" "),s("p",[e._v("During campaign setup phase, the ThingPark FUOTA server exchanges\nunicast messages with each device participating to the campaign:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v('RMC Agent sends a Downlink message with protocol request payload to the LRC. The RMC Agent will send Downlink messages with a minimum interval of "'),s("em",[e._v('ucast_msg_delay"')]),e._v("  milliseconds.")])]),e._v(" "),s("li",[s("p",[e._v('The RMC Agent expects the Downlink message sent report from the LRC. If the Downlink message sent report was not received or no response for Downlink message from a device was received within "'),s("em",[e._v('ucast_msg_delay"')]),e._v(" seconds, the RMC Agent resends the Downlink message.")])]),e._v(" "),s("li",[s("p",[e._v("After the Downlink message sent report is received by the RMC Agent, it expects an Uplink message with a protocol response payload within response timeout in\nseconds based on the lowest uplink rate for devices participating in a stage. If the Uplink message was not received for any device, the RMC Agent resends Downlink message.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(393),alt:""}})])])]),e._v(" "),s("p",[e._v('The request/response message exchange described above over all devices\nis called the "SETUP stage".')]),e._v(" "),s("p",[e._v('The SETUP stage continues until either "'),s("em",[e._v('Success threshold"')]),e._v(" devices,\nparticipating in the campaign, have succeeded to complete the setup\nflow (the RMC Agent receives a valid response from them) or sending\nretries count has been reached (configured by "),s("em",[e._v('"msg_retries"')]),e._v("\nproperty) or campaign's \""),s("em",[e._v('Maximum duration"')]),e._v(' seconds time has passed.\n"'),s("em",[e._v('Success threshold"')]),e._v(' and "'),s("em",[e._v('Maximum duration"')]),e._v(" are parameters\nconfigured for the campaign.")]),e._v(" "),s("p",[e._v('The next stage - the FILE TRANSFER stage-, will not start until "late\nanswer" time has passed. This time is calculated based on the lowest\nuplink rate for devices participating in a stage. This time is\nrequired to collect late uplinks from some devices.')]),e._v(" "),s("p",[s("em",[e._v('"ucast_msg_delay", "delivery_timeout", "msg_retries"')]),e._v(" are parameters\nspecified in the RMC Agent configuration file "),s("code",[e._v("config.ini")]),e._v(".")]),e._v(" "),s("p",[e._v("For more information, see "),s("RouterLink",{attrs:{to:"/FUOTA-server-configuration-logging/RMC-agent-configuration/"}},[e._v("RMC Agent Configuration")]),e._v(".")],1),e._v(" "),s("p",[e._v("During file transfer of binary and firmware upgrade campaigns, multicast\nmessages are sent by RMC Agent using following generic message flow:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v('The RMC Agent sends a Downlink message to the LRC to multicast group address (multicast virtual device). The RMC Agent will never send any multicast Downlink message earlier than "'),s("em",[e._v("mcast_msg_delay")]),e._v('" milliseconds from the previous multicast Downlink message sent.')])]),e._v(" "),s("li",[s("p",[e._v('If the "'),s("em",[e._v("summary_reports_disabled")]),e._v('" parameter is not set, the RMC Agent expects a Multicast summary report message from an LRC. If a Multicast summary report message was not received within expected time ("'),s("em",[e._v("summary_report_timeout")]),e._v('" -- delay_factor based on number\nof devices in multicast group), the RMC Agent will stop to wait summary report and send next Downlink message. If "'),s("em",[e._v("summary_report_timeout")]),e._v('" is equal to 0, the RMC Agent will wait\nindefinitely for the Multicast summary report and Downlink message sending will be paused.')])]),e._v(" "),s("li",[s("p",[e._v("This process is repeated for every data fragment and lasts until all uncoded and coded fragments are sent when FEC is activated, or until all uncoded fragments are sent when FEC is deactivated.")]),e._v(" "),s("p",[e._v("This process is also used when the protocol command request is sent via multicast, but for just one frame. For more information, see "),s("RouterLink",{attrs:{to:"/FUOTA-functionalities/FUOTA-update-campaigns/binary-transfer-campaign/#stage-5-fragsessionstatus"}},[e._v("Stage 5 - FragSessionStatus")]),e._v(".")],1)])]),e._v(" "),s("p",[s("img",{attrs:{src:"images/img9.png",alt:""}})]),e._v(" "),s("p",[s("em",[e._v('"mcast_msg_delay", "summary_reports_disabled", "summary_report_timeout"')]),e._v("  are parameters specified in the RMC Agent configuration file "),s("code",[e._v("config.ini")]),e._v(". For more information, see "),s("RouterLink",{attrs:{to:"/FUOTA-server-configuration-logging/RMC-agent-configuration/"}},[e._v("RMC Agent Configuration")]),e._v(".")],1)])}),[],!1,null,null,null);t.default=i.exports}}]);